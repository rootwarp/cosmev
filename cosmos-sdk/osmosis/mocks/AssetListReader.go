// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	assets "github.com/rootwarp/cosmev/cosmos-sdk/osmosis/assets"
	mock "github.com/stretchr/testify/mock"
)

// AssetListReader is an autogenerated mock type for the AssetListReader type
type AssetListReader struct {
	mock.Mock
}

// Denom provides a mock function with given fields: denom
func (_m *AssetListReader) Denom(denom string) (*assets.DenomUnit, error) {
	ret := _m.Called(denom)

	var r0 *assets.DenomUnit
	if rf, ok := ret.Get(0).(func(string) *assets.DenomUnit); ok {
		r0 = rf(denom)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*assets.DenomUnit)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(denom)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Fetch provides a mock function with given fields:
func (_m *AssetListReader) Fetch() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewAssetListReader interface {
	mock.TestingT
	Cleanup(func())
}

// NewAssetListReader creates a new instance of AssetListReader. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAssetListReader(t mockConstructorTestingTNewAssetListReader) *AssetListReader {
	mock := &AssetListReader{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
